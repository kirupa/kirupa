<!DOCTYPE html>
<html>

<head>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Canvas Grid</title>
  <style>
    body {
      background-color: #FFF;
      padding: 100px;
    }

    #myCanvas {
      border: 10px solid #333;
    }
  </style>
</head>

<body>

  <div id="container">
    <canvas id="myCanvas" width=440 height=440>

    </canvas>
  </div>

  <script>
    let rows = 17;
    let columns = 17;
    let radius = 1;
    let x_adjust = 0;
    let y_adjust = 0;
    let targetXY = { x:220, y:220 };
    let maxDistance = getDistance(0, 0, 440, 440);

    function draw() {
      let ctx = document.getElementById("myCanvas").getContext("2d");
      for (let y = 0; y < columns; y++) {
        for (let x = 0; x < rows; x++) {

          let xPos = 20 + x * 25;
          let yPos = 20 + y * 25;

          radius = intensity(
            {
              x: xPos,
              y: yPos
            },
            {
              x: targetXY.x,
              y: targetXY.y
            }
          );

          console.log(x + " " + y);

          ctx.fillStyle = "black";
          ctx.beginPath();
          ctx.arc(xPos, yPos, radius, 0, Math.PI * 2, true);
          ctx.fill();
        }
      }
    }

    function intensity(current, target) {
      let distance = getDistance(current.x, current.y, target.x, target.y);

      let size = 5 * (100 / (distance + 50));

      if (size < 1) {
        return 1;
      } else {
        return size;
      }

      console.log(size);
      return size;
    }

    // pythagorean theorem
    function getDistance(xA, yA, xB, yB) { 
      let xDiff = xA - xB; 
      let yDiff = yA - yB;
  
      return Math.sqrt(xDiff * xDiff + yDiff * yDiff);
  }

    draw();
  </script>
</body>

</html>
