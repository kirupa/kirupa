<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8" />
  <title>The Colorizer!</title>
  <script crossorigin 
          src="https://unpkg.com/react@16/umd/react.development.js"></script>
  <script crossorigin 
          src="https://unpkg.com/react-dom@16/umd/react-dom.development.js"></script>
  <script crossorigin
          src="https://unpkg.com/babel-standalone@6.15.0/babel.min.js"></script>

  <style>
    #container {
      padding: 50px;
      background-color: #FFF;
    }

    .colorSquare {
      box-shadow: 0px 0px 25px 0px #333;
      width: 242px;
      height: 242px;
      margin-bottom: 15px;
    }

    .colorArea input {
      padding: 10px;
      font-size: 16px;
      border: 2px solid #CCC;
    }

    .colorArea button {
      padding: 10px;
      font-size: 16px;
      margin: 10px;
      background-color: #666;
      color: #FFF;
      border: 2px solid #666;
    }

    .colorArea button:hover {
      background-color: #111;
      border-color: #111;
      cursor: pointer;
    }

    #colorHeading {
      padding: 0;
      margin: 50px;
      margin-bottom: -20px;
      font-family: sans-serif;
    }
  </style>
</head>

<body>

  <h1 id="colorHeading">Colorizer</h1>
  
  <div id="container"></div>
  <script type="text/babel">

    let destination = document.querySelector("#container");

    class Colorizer extends React.Component {
      constructor(props, context) {
	  	  super(props, context);

        this.state = {
          color: "",
          bgColor: "white"
        }

        this.colorValue = this.colorValue.bind(this);
        this.setNewColor = this.setNewColor.bind(this);
      }

      colorValue(e) {
        this.setState({color: e.target.value});
      }
      
      setNewColor(e){
        this.setState({
          bgColor: this.state.color
        });

        this._input.focus();
        this._input.value = "";

        e.preventDefault();
      }

      render() {
        let squareStyle = {
          backgroundColor: this.state.bgColor
        };

        let self = this;

        return (
          <div className="colorArea">
            <div style={squareStyle} className="colorSquare"></div>

            <form onSubmit={this.setNewColor}>
              <input onChange={this.colorValue} 
                      ref={
                        function(el) {
                          self._input = el;
                        }
                      }
                      placeholder="Enter a color value"></input>
              <button type="submit">go</button>
            </form>
            <ColorLabel color={this.state.bgColor}/>
          </div>
        );
      }
    }

    let heading = document.querySelector("#colorHeading");

    class ColorLabel extends React.Component {
      render() {
        return ReactDOM.createPortal(
          ": " + this.props.color,
          heading
        );
      }
    }

    ReactDOM.render(
      <div>
        <Colorizer/>
      </div>,
      destination
    );
  </script>
</body>

</html>
