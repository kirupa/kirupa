<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Custom Cursor with Directional Rotation</title>
</head>
<body>
  <svg id="customCursor" width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g filter="url(#filter0_d_2_333)">
    <path d="M15.9231 18.0296C16.0985 18.4505 15.9299 20.0447 15 20.4142C14.0701 20.7837 12.882 20.4142 12.882 20.4142L10.726 16.1024L7 19.8284V3L18.4142 14.4142H14.1615C14.3702 14.8144 15.7003 17.4948 15.9231 18.0296Z" fill="white" style="fill:white;fill-opacity:1;"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M8 5.41422V17.4142L11 14.4142L13.5 19.4142C13.5 19.4142 14.1763 19.63 14.5 19.4142C14.8237 19.1984 15.1457 18.7638 15 18.4142C14.3123 16.7638 12.5 13.4142 12.5 13.4142H16L8 5.41422Z" fill="black" style="fill:black;fill-opacity:1;"/>
    </g>
    <defs>
    <filter id="filter0_d_2_333" x="5.2" y="2.2" width="15.0142" height="21.1784" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
    <feFlood flood-opacity="0" result="BackgroundImageFix"/>
    <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
    <feOffset dy="1"/>
    <feGaussianBlur stdDeviation="0.9"/>
    <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.65 0"/>
    <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_2_333"/>
    <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_2_333" result="shape"/>
    </filter>
    </defs>
  </svg>
  
  <style>
    body {
      cursor: none;
    }
    
    button, input, textarea, select, [role="button"], p, li, ul, pre, code, dialog {
        cursor: auto !important;
      }
    
    a {
      cursor: pointer !important;
    }
  
  
      #customCursor {
        position: fixed;
        pointer-events: none;
        width: 30px;
        height: 30px;
        transform-origin: center;
        left: 0;
        top: 0;
        z-index: 9999;
        will-change: transform;
        opacity: 1;
        transition: opacity 0.2s ease;
      display: none;
      }
  
      #customCursor.hidden {
        opacity: 0;
      }
  
  </style>
  
  <script>
      const cursor = document.getElementById('customCursor');
      let lastX = 0;
      let lastY = 0;
      let targetX = 0;
      let targetY = 0;
      let currentX = 0;
      let currentY = 0;
      let currentRotation = 0;
      let targetRotation = 0;
      
      const SMOOTHING = 0.2;
      const MOVEMENT_THRESHOLD = 0.1;
      const MAX_ROTATION_SPEED = 10;
  
      function lerp(start, end, factor) {
        return start + (end - start) * factor;
      }
  
      function angleDifference(angle1, angle2) {
        const diff = ((angle2 - angle1 + 180) % 360) - 180;
        return diff < -180 ? diff + 360 : diff;
      }
  
      function updateCursor(e) {
        targetX = e.clientX;
        targetY = e.clientY;
  
        // Check if the target element is interactive
        const targetElement = e.target;
        const isInteractive = targetElement.matches('a, button, input, textarea, select, [role="button"], [contenteditable="true"], span, p, li, ul, pre, code, iframe, lite-youtube, img, dialog');
        
        // Toggle cursor visibility
        cursor.classList.toggle('hidden', isInteractive);
      cursor.style.display = "block";
      
      cursor.style.translate = `${targetX}px ${targetY}px`;
      }
  
      function animate() {
        currentX = lerp(currentX, targetX - 10, SMOOTHING);
        currentY = lerp(currentY, targetY - 10, SMOOTHING);
        
        const deltaX = targetX - lastX;
        const deltaY = targetY - lastY;
        const movement = Math.sqrt(deltaX * deltaX + deltaY * deltaY);
  
        if (movement > MOVEMENT_THRESHOLD) {
          const angle = Math.atan2(deltaY, deltaX) * 180 / Math.PI + 90;
          targetRotation = angle;
          
          const rotationDiff = angleDifference(currentRotation, targetRotation);
          
          const rotationDelta = Math.min(
            Math.abs(rotationDiff),
            MAX_ROTATION_SPEED
          ) * Math.sign(rotationDiff);
          
          currentRotation += rotationDelta;
          currentRotation = ((currentRotation + 180) % 360) - 180;
        }
  
        cursor.style.rotate = `${currentRotation}deg`;
  
        lastX = targetX;
        lastY = targetY;
  
        requestAnimationFrame(animate);
      }
  
      // Start animation loop
      requestAnimationFrame(animate);
      
      // Add event listener
      document.addEventListener('mousemove', updateCursor);
    </script>
</body>
</html>