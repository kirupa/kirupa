<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Random Walk</title>

  <style>
    body {
      margin: 50px;
    }

    #myCanvas {
      border: 4px solid #111;
      border-radius: 10px;
    }
  </style>
</head>

<body>
  <canvas id="myCanvas" width="500" height="500">
  </canvas>

  <script>
    const canvas = document.querySelector('#myCanvas');
    const ctx = canvas.getContext('2d');

    class Walker {
      constructor(color, stepSize) {
        this.x = canvas.width / 2;
        this.y = canvas.height / 2;
        this.prevX = this.x;
        this.prevY = this.y;
        this.color = color;
        this.stepSize = stepSize;
      }

      draw() {
        this.prevX = this.x;
        this.prevY = this.y;

        // Choose a random direction (0-8)
        const direction = Math.floor(Math.random() * 9);

        // Calculate movement based on chosen direction
        switch (direction) {
          case 0:  // Right
            this.x += this.stepSize;
            break;
          case 1:  // Left
            this.x -= this.stepSize;
            break;
          case 2:  // Up
            this.y -= this.stepSize;
            break;
          case 3:  // Down
            this.y += this.stepSize;
            break;
          case 4:  // Up-Right
            this.x += this.stepSize;
            this.y -= this.stepSize;
            break;
          case 5:  // Down-Right
            this.x += this.stepSize;
            this.y += this.stepSize;
            break;
          case 6: // Down-Left
            this.x -= this.stepSize;
            this.y += this.stepSize;
            break;
          case 7: // Up-Left
            this.x -= this.stepSize;
            this.y -= this.stepSize;
            break;
          case 8: // No movement (stay in place)
            break;
        }

        // Keep the walk within the canvas bounds
        this.x = Math.max(0, Math.min(this.x, canvas.width));
        this.y = Math.max(0, Math.min(this.y, canvas.height));

        // Draw a line segment
        ctx.beginPath();
        ctx.moveTo(this.prevX, this.prevY);
        ctx.lineTo(this.x, this.y);
        ctx.lineWidth = 2;
        ctx.strokeStyle = this.color;
        ctx.stroke();
        ctx.closePath();
      }
    }

    let walker = new Walker("blue");
    let walker2 = new Walker("green");
    let walker3 = new Walker("black");
    let walker4 = new Walker("pink");

    function animate() {

      for (let i = 0; i < 100; i++) {
        walker.draw();
        walker2.draw();
        walker3.draw();
        walker4.draw();
      }

      requestAnimationFrame(animate);
    }

    animate(); // Start the animation

    canvas.addEventListener("click", () => {
      drawWalker();
    });
  </script>
</body>

</html>